package com.example.my_app.ui.screens.home

import androidx.compose.foundation.layout.*
import androidx.compose.foundation.shape.RoundedCornerShape
import androidx.compose.material.icons.Icons
import androidx.compose.material.icons.filled.*
import androidx.compose.material3.*
import androidx.compose.runtime.Composable
import androidx.compose.ui.Alignment
import androidx.compose.ui.Modifier
import androidx.compose.ui.draw.clip
import androidx.compose.ui.text.font.FontWeight
import androidx.compose.ui.unit.dp
import com.example.my_app.data.model.Achievement
import com.example.my_app.data.model.DailyTask
import com.example.my_app.data.model.Exercise

@Composable
fun WelcomeHeader(userName: String) {
    Card(
        modifier = Modifier.fillMaxWidth(),
        colors = CardDefaults.cardColors(
            containerColor = MaterialTheme.colorScheme.primaryContainer
        )\n    ) {\n        Column(\n            modifier = Modifier.padding(16.dp)\n        ) {\n            Text(\n                text = \"Merhaba, $userName!\",\n                style = MaterialTheme.typography.headlineSmall,\n                fontWeight = FontWeight.Bold,\n                color = MaterialTheme.colorScheme.onPrimaryContainer\n            )\n            Text(\n                text = \"Bugün egzersizlerinize devam etmeye hazır mısınız?\",\n                style = MaterialTheme.typography.bodyMedium,\n                color = MaterialTheme.colorScheme.onPrimaryContainer\n            )\n        }\n    }\n}\n\n@Composable\nfun DailyProgressCard(\n    todayExercises: Int,\n    totalExercises: Int,\n    todayPoints: Int,\n    streak: Int\n) {\n    Card(modifier = Modifier.fillMaxWidth()) {\n        Column(\n            modifier = Modifier.padding(16.dp)\n        ) {\n            Text(\n                text = \"Günlük İlerleme\",\n                style = MaterialTheme.typography.titleMedium,\n                fontWeight = FontWeight.Bold\n            )\n            \n            Spacer(modifier = Modifier.height(12.dp))\n            \n            Row(\n                modifier = Modifier.fillMaxWidth(),\n                horizontalArrangement = Arrangement.SpaceBetween\n            ) {\n                ProgressItem(\n                    icon = Icons.Default.FitnessCenter,\n                    label = \"Egzersizler\",\n                    value = \"$todayExercises/$totalExercises\",\n                    progress = if (totalExercises > 0) todayExercises.toFloat() / totalExercises else 0f\n                )\n                \n                ProgressItem(\n                    icon = Icons.Default.Star,\n                    label = \"Bugünkü Puan\",\n                    value = \"$todayPoints\",\n                    progress = null\n                )\n                \n                ProgressItem(\n                    icon = Icons.Default.LocalFireDepartment,\n                    label = \"Seri\",\n                    value = \"$streak gün\",\n                    progress = null\n                )\n            }\n        }\n    }\n}\n\n@Composable\nfun ProgressItem(\n    icon: androidx.compose.ui.graphics.vector.ImageVector,\n    label: String,\n    value: String,\n    progress: Float?\n) {\n    Column(\n        horizontalAlignment = Alignment.CenterHorizontally\n    ) {\n        Icon(\n            imageVector = icon,\n            contentDescription = label,\n            tint = MaterialTheme.colorScheme.primary\n        )\n        Spacer(modifier = Modifier.height(4.dp))\n        Text(\n            text = label,\n            style = MaterialTheme.typography.bodySmall\n        )\n        Text(\n            text = value,\n            style = MaterialTheme.typography.bodyMedium,\n            fontWeight = FontWeight.Bold\n        )\n        progress?.let {\n            Spacer(modifier = Modifier.height(4.dp))\n            LinearProgressIndicator(\n                progress = it,\n                modifier = Modifier.width(60.dp)\n            )\n        }\n    }\n}\n\n@Composable\nfun QuickActionsRow(\n    onStartExercise: () -> Unit,\n    onViewProgress: () -> Unit,\n    onViewMessages: () -> Unit,\n    onViewLeaderboard: () -> Unit\n) {\n    Row(\n        modifier = Modifier.fillMaxWidth(),\n        horizontalArrangement = Arrangement.SpaceBetween\n    ) {\n        QuickActionButton(\n            icon = Icons.Default.PlayArrow,\n            label = \"Egzersiz Başlat\",\n            onClick = onStartExercise,\n            modifier = Modifier.weight(1f)\n        )\n        \n        Spacer(modifier = Modifier.width(8.dp))\n        \n        QuickActionButton(\n            icon = Icons.Default.BarChart,\n            label = \"İlerleme\",\n            onClick = onViewProgress,\n            modifier = Modifier.weight(1f)\n        )\n        \n        Spacer(modifier = Modifier.width(8.dp))\n        \n        QuickActionButton(\n            icon = Icons.Default.Message,\n            label = \"Mesajlar\",\n            onClick = onViewMessages,\n            modifier = Modifier.weight(1f)\n        )\n        \n        Spacer(modifier = Modifier.width(8.dp))\n        \n        QuickActionButton(\n            icon = Icons.Default.Leaderboard,\n            label = \"Liderlik\",\n            onClick = onViewLeaderboard,\n            modifier = Modifier.weight(1f)\n        )\n    }\n}\n\n@Composable\nfun QuickActionButton(\n    icon: androidx.compose.ui.graphics.vector.ImageVector,\n    label: String,\n    onClick: () -> Unit,\n    modifier: Modifier = Modifier\n) {\n    Card(\n        onClick = onClick,\n        modifier = modifier\n    ) {\n        Column(\n            modifier = Modifier.padding(12.dp),\n            horizontalAlignment = Alignment.CenterHorizontally\n        ) {\n            Icon(\n                imageVector = icon,\n                contentDescription = label,\n                tint = MaterialTheme.colorScheme.primary\n            )\n            Spacer(modifier = Modifier.height(4.dp))\n            Text(\n                text = label,\n                style = MaterialTheme.typography.bodySmall\n            )\n        }\n    }\n}\n\n@Composable\nfun ExerciseCard(\n    exercise: Exercise,\n    onClick: () -> Unit\n) {\n    Card(\n        onClick = onClick,\n        modifier = Modifier\n            .width(200.dp)\n            .height(120.dp)\n    ) {\n        Column(\n            modifier = Modifier.padding(12.dp)\n        ) {\n            Text(\n                text = exercise.title,\n                style = MaterialTheme.typography.titleSmall,\n                fontWeight = FontWeight.Bold,\n                maxLines = 2\n            )\n            Spacer(modifier = Modifier.height(4.dp))\n            Text(\n                text = \"${exercise.duration / 60} dakika\",\n                style = MaterialTheme.typography.bodySmall\n            )\n            Text(\n                text = \"${exercise.points} puan\",\n                style = MaterialTheme.typography.bodySmall,\n                color = MaterialTheme.colorScheme.primary\n            )\n        }\n    }\n}\n\n@Composable\nfun DailyTaskCard(\n    task: DailyTask,\n    onCompleteTask: () -> Unit\n) {\n    Card(\n        modifier = Modifier.fillMaxWidth()\n    ) {\n        Row(\n            modifier = Modifier\n                .fillMaxWidth()\n                .padding(16.dp),\n            verticalAlignment = Alignment.CenterVertically\n        ) {\n            Column(\n                modifier = Modifier.weight(1f)\n            ) {\n                Text(\n                    text = task.title,\n                    style = MaterialTheme.typography.titleSmall,\n                    fontWeight = FontWeight.Bold\n                )\n                Text(\n                    text = task.description,\n                    style = MaterialTheme.typography.bodySmall\n                )\n                \n                Spacer(modifier = Modifier.height(8.dp))\n                \n                LinearProgressIndicator(\n                    progress = if (task.targetValue > 0) task.currentProgress.toFloat() / task.targetValue else 0f,\n                    modifier = Modifier.fillMaxWidth()\n                )\n                \n                Text(\n                    text = \"${task.currentProgress}/${task.targetValue} - ${task.points} puan\",\n                    style = MaterialTheme.typography.bodySmall\n                )\n            }\n            \n            if (task.isCompleted) {\n                Icon(\n                    imageVector = Icons.Default.CheckCircle,\n                    contentDescription = \"Tamamlandı\",\n                    tint = MaterialTheme.colorScheme.primary\n                )\n            } else {\n                Button(\n                    onClick = onCompleteTask,\n                    enabled = task.currentProgress >= task.targetValue\n                ) {\n                    Text(\"Tamamla\")\n                }\n            }\n        }\n    }\n}\n\n@Composable\nfun AchievementCard(\n    achievement: Achievement\n) {\n    Card(\n        modifier = Modifier.width(120.dp)\n    ) {\n        Column(\n            modifier = Modifier.padding(12.dp),\n            horizontalAlignment = Alignment.CenterHorizontally\n        ) {\n            Icon(\n                imageVector = Icons.Default.EmojiEvents,\n                contentDescription = achievement.title,\n                tint = MaterialTheme.colorScheme.primary\n            )\n            Spacer(modifier = Modifier.height(4.dp))\n            Text(\n                text = achievement.title,\n                style = MaterialTheme.typography.bodySmall,\n                maxLines = 2\n            )\n        }\n    }\n}